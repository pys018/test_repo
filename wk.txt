

https://blog.naver.com/addibuddi/34877688
https://blog.naver.com/addibuddi/34877670
d:\temp3\오라클 개발자 튜닝가이드-etruelove.pdf
E:\MyMy\Document\Programming\Java\JavaCafe_Doc\Java_1.ppt





나는 '대인춘풍 지기추상(待人春風 持己秋霜)'이라는 나의 좌우명을 항상 마음에 품고 살아간다.
'남을 대할 때는 봄바람처럼, 자신을 대할 때는 가을 서리처럼' 하자는 다짐을 실천하고자 노력하는 것이다.
- 신영복 (전 성공회대 교수)







170,370
----------
178,200
=====
348,570



540의 0.5 MM  --> 270
540의 0.75 MM --> 405




========== [4대보험료 계산] ==========
1. 180
  -. 연금보험료 : 162,000
  -. 고용보험료 : 33,000
  -. 국민건강보험 : 137,700
  -. 산재보험료 : ???
----------------------------------------
                    332,700
----------------------------------------
  -. 소득세 : 15,110
  -. 지방소득세 1,510
----------------------------------------
                    349,320

2. 190
  -. 연금보험료 : 171,000
  -. 고용보험료 : 35,150
  -. 국민건강보험 : 145,340
  -. 산재보험료 : ???
----------------------------------------
                    351,490
----------------------------------------
  -. 소득세 : 17,180
  -. 지방소득세 1,710
----------------------------------------
                    370,380
========== [4대보험료 계산] ==========




###################################
12/31	330 잔액
--------------------------------------------------
01/10	35 출금 -- 국민카드
--------------------------------------------------
           330 - 35 = 295 잔액
01/15	710 * 0.75 = 532 입금(예상)
--------------------------------------------------
           295 + 532 = 827 잔액
           30 출금
--------------------------------------------------
           827 - 30 = 797 잔액
01/29	390 출금
--------------------------------------------------
           797 - 390 = 407 잔액
02/05	80 출금(예상) -- 우리카드
--------------------------------------------------
           407 - 80 = 327 잔액
02/10	35 출금 -- 국민카드
--------------------------------------------------
           327 - 35 = 292 잔액
--------------------------------------------------
02/10	650 * 0.75 (3주치) = 487
           190에 대한 4대보험 : 37만원(예상)
           460에 대한 3.3       : 15만원(예상)
--------------------------------------------------
           487 - 37 - 15 = 435 입금(예상)
--------------------------------------------------
           292 + 435 = 727 잔액
--------------------------------------------------
02/26	390 출금
--------------------------------------------------
           727 - 390 = 337 잔액
03/05	80 출금(예상) -- 우리카드
--------------------------------------------------
           337 - 80 = 257 잔액
03/10	35 출금 -- 국민카드
--------------------------------------------------
           257 - 35 = 222 잔액
###################################










---------------------------------------------------------------------------
# 김도연전무님
    18일 출근? --> 11일 출근
    계약서 — 반프리(근로소득 : 190, 사업소득 : 460)
---------------------------------------------------------------------------
# 문이사님
# 성준형
# 강돈호차장
# 명노헌차장
# 이필웅차장
---------------------------------------------------------------------------

차장님...
혹시 들어가신 플젝은 마노 통해서 들어가신건가요?

지난주 화욜날 문완기이사님하고 통화하다가 1월6일부터 들어가는게 있었는데, 저는 딴데 있다고 해서 연락 안 했다고 하시더라구요.







############################## [Project 정보] ##############################
<잇센터>

김도연전무님
  -. 18일 출근?
  -. 계약서? 반프리(근로소득 : 190, 사업소득 : 460)

심문보이사님
  -. 엠코퍼레이션


- 고객 : KB금융지주 ( 여의도역 1분거리 )
- 업무 : 자산운용 디지털 플랫폼 구축 (포탈 및 분석시스템 개발)
- Node.js / API개발 / jsp : 즉시 ~ 5월17일
- Vue.js / jsp : 1월18일 ~ 5월17일
- 장소 : 여의도역에서 1분 거리


플젝 총 인원은 15명 정도
분석/설계 3주째
개발기간 2달반  1/18 ~ 3월말
4월 초~~  테스트 / 오픈 / 안정화
본수 30본 정도
화면 하나당 차트가 20~30개 정도이고, 그리드도 있음
화면이 복잡하긴 한데 하나만 잘 만들어 놓으면......


vue.js
차트 4개 사용
  -. 3카피 구매완료
  -. 어느 문서에는 어느 차트 사용할지는 기술검토는 끝났음.



node.js
rest api
google cloud 기반에서 개발
mysql

쿠버네티스

yona?
############################## [Project 정보] ##############################





▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼ [Vue.js 란] ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
Vue 공식 가이드 사이트 : https://vuejs.org/v2/guide / https://v3.vuejs.org/
한글 버전 : https://kr.vuejs.org/v2/guide
CLI 공식 문서 사이트 : https://cli.vuejs.org/



++++++++++++++++++++ [유튜브] ++++++++++++++++++++
    송자바
    개발자의 품격
    코지코더
    zerocho
    김기민

https://www.youtube.com/watch?v=fuGAlgqCdTk&t=1s
https://www.youtube.com/watch?v=sqH0u8wN4Rs&t=453s

https://www.youtube.com/watch?v=gZBKGn0wQXU&list=PLB7CpjPWqHOtYP7P_0Ls9XNed0NLvmkAh
https://www.youtube.com/watch?v=gZBKGn0wQXU&t=6s
++++++++++++++++++++ [유튜브] ++++++++++++++++++++



https://blog.naver.com/spdlqjdudghl/221251245550
https://velog.io/@ednadev/Vue.js-1-개발환경
	https://velog.io/@ednadev/Vue.js-개발-환경-세팅    "Vue CLI로 생성된 파일 살펴보기" 여기부터 읽기......
https://medium.com/@hozacho/맨땅에-vuejs-리스트-462d88047893
▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ [Vue.js 란] ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲



▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼ [VueJs IDE] ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
<The best VueJs IDEs and editors to choose from>
https://morioh.com/p/0deb3ecac091
    1. WebStorm
    2. Atom
    3. Visual Studio Code
    4. CodeMix
    5. Sublime Text


--------------- [visual studio code] ---------------
https://goodteacher.tistory.com/192
--------------- [visual studio code] ---------------


--------------- [eclipse] ---------------
https://blog.naver.com/anytimedebug/221314355297
https://m.blog.naver.com/bb_/221589281709
https://seculayerlab.tistory.com/20
https://kimyhcj.tistory.com/233 에 spring boot + vue.js 연동 샘플
https://www.youtube.com/watch?v=53xKwC9CYkg    Vue.js app in the Eclipse IDE tutorial
--------------- [eclipse] ---------------
▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ [VueJs IDE] ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲



C:\Users\Administrator>node -v
v14.15.4

C:\Users\Administrator>npm -v
6.14.10

C:\Users\Administrator>vue -V
@vue/cli 4.5.10




1. npm 설치
2. C:\Users\Administrator>npm
3. C:\Users\Administrator>cd c:\
4. c:\>mkdir vuejs-project
5. c:\>cd vuejs-project
6. c:\vuejs-project>npm install vuejs
7. c:\vuejs-project>npm install -g @vue/cli
8. c:\vuejs-project>vue create app
9. c:\vuejs-project>cd app
10. c:\vuejs-project>yarn serve --> npm run serve

11. visual studio code 설치
	vetur~ 첫번째꺼 Vetur 0.31.3
	html sc~ 두번째꺼 HTML Snippets 0.2.1
	js~ 첫번째꺼 JS-CSS-HTML Formatter 0.2.3
	vue 3~ 두번째꺼 Vue 3 Snippets Highlight Form 1.0.13 대신에 Vue 3 Snippets 1.0.4 설치함
	vue-b~ 첫번째꺼 vue-beautify 2.0.4









>>>>>>>>>> [2021-01-11 오후 1:10] <<<<<<<<<<
# 신진욱수석


# 식당 : 2073
# ID : Z013437
# 출입카드 : A083



<업무설명>
# KBDAM : KB Digital Asset Management
# 차트? 파이썬 소스 분석해서 Java Script로 변환
  -. 하이차트
  -. 이차트
  -. 캔버스차트
  -. 아이차트
# Vue
  -. 스프링부트 쓸지? 뷰티파이? 쓸지 결정 필요. 우선은 뷰티파이로 결정.
     스프링부트는 좀 제한적임.
# docker 환경 구성
  -. 개발 환경 구성
# 전자정부프레임워크 vue js 연동 (spring vue.js 연동)
  -. 기존 Portal(메뉴관리 / 권한관리 / 게시판관리 / 컨텐츠관리) 과 금번 플젝 화면과 연동 필요
  -. Spring & Vue.js 연동
     https://jhhan009.tistory.com/33
     https://jhhan009.tistory.com/39?category=780121
     https://jhhan009.tistory.com/49?category=780121
     https://become-a-developer.tistory.com/1    :::    스프링부트와 연동하는거

  -. URL 직접 호출 시 인증 체크 필요 --> 로그인 화면으로 이동


# 3월26일 구현
# 4월15일 오픈
>>>>>>>>>> [2021-01-11 오후 1:10] <<<<<<<<<<





>>>>>>>>>> [2021-01-12 오전 9:19] <<<<<<<<<<
# NGINX 버전?
  -. Stable version	1.18.0 (64-bit)	26 May 2020
# C:\Users\Administrator>vue -V
  -. @vue/cli 4.5.10

# zulu? zulu-8?


<개발환경>
# C:\Users\Administrator\.m2 디렉토리 생성
# C:\Users\Administrator\.m2 디렉토리에서 repository.zip 압축풀기
# jdk 설치 : jdk-8u202-windows-x64.exe
# C:\Portal 디렉토리 생성
  -. eGovFrameDev-3.7.0-64bit.exe 실행
# C:\Portal\eGovFrameDev-3.7.0-64bit\workspace 디렉토리에서
  -. databus.zip 압축풀기 : databus 디렉토리 밑으로
  -. hcms-helper.zip 압축풀기 : workspace 디렉토리 밑으로
# C:\Portal\eGovFrameDev-3.7.0-64bit\eclipse 실행
  -. File > Import > General > Existing Projects into Workspace > Select root directory > C:\Portal\eGovFrameDev-3.7.0-64bit\workspace\databus
  -. File > Import > General > Projects from Folder or Archive > Select root directory > C:\Portal\eGovFrameDev-3.7.0-64bit\workspace\commons-hcms
  -. File > Import > General > Projects from Folder or Archive > Select root directory > C:\Portal\eGovFrameDev-3.7.0-64bit\workspace\hcms
  -. File > Import > General > Projects from Folder or Archive > Select root directory > C:\Portal\eGovFrameDev-3.7.0-64bit\workspace\hcms-taglib



<Vue CLI3 + Vuetify 개발환경 세팅>
  -. https://javacpro.tistory.com/71

c:\Users\Administrator>cd c:\
c:\>cd Portal
c:\Portal>mkdir KBDAM
c:\Portal>cd KBDAM
c:\Portal\KBDAM>npm install vuejs
c:\Portal\KBDAM>npm install -g @vue/cli
c:\Portal\KBDAM>vue create my-app
c:\Portal\KBDAM>cd my-app
c:\Portal\KBDAM\my-app>vue add vuetify
c:\Portal\KBDAM\my-app>npm run serve



https://v2.vuetifyjs.com/ko/getting-started/quick-start/
http://blog.weirdx.io/post/60376
https://whwl.tistory.com/42


npm uninstall -g @vue/cli

vue init my-app

npm cache clean --force





<2점대>
c:\Portal\KBDAM>vue create my-app2
c:\Portal\KBDAM>cd my-app2
c:\Portal\KBDAM\my-app2>vue add vuetify
c:\Portal\KBDAM\my-app2>npm run serve






--------------------------------------------------------------------------------------------------------------
[ VSCode ] 터미널을 powershell에서 cmd로 변경하는 2가지 방법
출처: https://hianna.tistory.com/349 [어제 오늘 내일]
--------------------------------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=fuGAlgqCdTk&t=68s
https://www.youtube.com/watch?v=sqH0u8wN4Rs&t=468s
--------------------------------------------------------------------------------------------------------------
구글검색 : 전자정부프레임워크 vue js 연동
https://become-a-developer.tistory.com/1
https://jhhan009.tistory.com/33
https://jhhan009.tistory.com/39?category=780121
https://jhhan009.tistory.com/49?category=780121
--------------------------------------------------------------------------------------------------------------
https://cli.vuejs.org/
https://velog.io/@ednadev/Vue.js-1-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD
--------------------------------------------------------------------------------------------------------------
구글검색 : vue.js vuetify 사용법

<vuetify>
https://doitnow-man.tistory.com/253
https://doitnow-man.tistory.com/254
https://doitnow-man.tistory.com/255
--------------------------------------------------------------------------------------------------------------


C:\Portal\KBDAM\my-app2
>>>>>>>>>> [2021-01-12 오전 9:19] <<<<<<<<<<







>>>>>>>>>> [2021-01-13 오전 9:10] <<<<<<<<<<
-----------------------------------------------------------------
https://dollvin.tistory.com/61
-----------------------------------------------------------------
c:\Portal\VUE_EXAM>npm install -g @vue/cli
c:\Portal\VUE_EXAM>vue create simple-board
c:\Portal\VUE_EXAM>cd simple-board
c:\Portal\VUE_EXAM\simple-board>vue add vuetify

# vuex 및 vue-router 설치
c:\Portal\VUE_EXAM\simple-board>npm install --save-dev vue-router vuex
# axios 설치
c:\Portal\VUE_EXAM\simple-board>npm install --save-dev axios

c:\Portal\VUE_EXAM\simple-board>npm run serve


xhr.js?b50d:177 GET http://localhost:8000/api/board/list net::ERR_CONNECTION_REFUSED
-----------------------------------------------------------------


-----------------------------------------------------------------
https://dev.to/instantwebtoolsnet/datatables-with-vuejs-vuetify-pagination-rest-api-3jji
-----------------------------------------------------------------
--c:\Portal\VUE_EXAM>npm install -g @vue/cli
c:\Portal\VUE_EXAM>vue create datatable-vue
c:\Portal\VUE_EXAM>cd datatable-vue
c:\Portal\VUE_EXAM\datatable-vue>vue add vuetify

# axios 설치
c:\Portal\VUE_EXAM\datatable-vue>npm install --save axios vue-axios

c:\Portal\VUE_EXAM\datatable-vue>npm run serve
-----------------------------------------------------------------
>>>>>>>>>> [2021-01-13 오전 9:10] <<<<<<<<<<



●●●●●●●●●●●●●●●●●●●● [vue.js node.js 연동] ●●●●●●●●●●●●●●●●●●●●
<2021-01-13 오전 9:10>
https://mrw0119.tistory.com/136
https://mrw0119.tistory.com/137



    <h1>5월 마지막주 영화 예매 순위</h1>
    <ul class="movies">
      <li v-for="movie in movies" class="item" v-bind:key="movie.id">



+++++ [Vue.js + Express + MySQL로 Node API 서버 구성하기 Quick Start] +++++
시리즈는 3 파트로 연재될 예정입니다.
Part1. Vue.js + Express로 프론트엔드와 백엔드 통신 이해하기
  -. https://medium.com/hivelab-dev/vue-express-mysql-part1-98f68408d444
Part2. Express + MySQL로 DB 연동하기
  -. https://medium.com/hivelab-dev/vue-express-mysql-part2-6d8fc0e497de
Part3. Mix All — 로그인/회원가입 기능 개발하기
  -. https://medium.com/hivelab-dev/vue-express-mysql-part3-3161bbb6c624


=================================================================
<Part1. Vue.js + Express로 프론트엔드와 백엔드 통신 이해하기>
=================================================================
Step1. 프론트엔드 개발 환경 세팅 (Vue.js)
  C:\Portal\VUE_EXAM>mkdir movie
  C:\Portal\VUE_EXAM>cd movie
  C:\Portal\VUE_EXAM\movie>npm install -g yarn
  C:\Portal\VUE_EXAM\movie>npm install -g @vue/cli
  C:\Portal\VUE_EXAM\movie>vue create frontend	// frontend 폴더 생성
  C:\Portal\VUE_EXAM\movie>cd frontend
  C:\Portal\VUE_EXAM\movie\frontend>npm run serve	//서버 실행
    -. locahost:8080으로 접속해서 확인하기

Step2. 백엔드 개발환경 세팅 (Express)
  C:\Portal\VUE_EXAM\movie\frontend>cd ..
  C:\Portal\VUE_EXAM\movie>npm install -g express-generator
  C:\Portal\VUE_EXAM\movie>express --view=pug backend	// backend 폴더 생성
  C:\Portal\VUE_EXAM\movie>cd backend
  C:\Portal\VUE_EXAM\movie\backend>npm install
  C:\Portal\VUE_EXAM\movie\backend>npm start	// 서버 실행
    -. localhost:3000 으로 접속해서 확인하기

Step3. 백엔드와 연동
  C:\Portal\VUE_EXAM\movie\backend>cd ..
  C:\Portal\VUE_EXAM\movie>cd frontend
  C:\Portal\VUE_EXAM\movie\frontend>npm run build
    -. backend/public 폴더의 구조가 변경됨 확인
    -. Express 서버를 실행시키면, localhost:3000의 페이지도 프론트엔드쪽과 동일하게 변경된 것을 확인

  C:\Portal\VUE_EXAM\movie\frontend>cd ../
  C:\Portal\VUE_EXAM\movie>cd backend
  C:\Portal\VUE_EXAM\movie\backend>npm start

Step4. 백엔드에서 프론트엔드로 보낼 데이터 마련하기
  -. backend 폴더 하위에 movies.json
  -. 이제 라우터를 설정합니다. backend/routes/ 하위에 movies.js를 생성한 뒤, 다음과 같이 입력합니다.
  -. backend/app.js에는 아래 내용을 추가합니다. 프론트엔드쪽에서 /api/movies 요청을 보내면, 위 코드에서 설정한 라우터를 통해 데이터를 처리합니다.
     …
     var moviesRouter = require('./routes/movies');
     …
     app.use('/api/movies', moviesRouter);

Step5. 프론트에 뿌려질 화면 제작
  -. frontend/src/component로 이동하여 MovieIndexPage.vue를 생성하고 다음과 같이 입력합니다.
  -. 상세 페이지로 MovieShowPage.vue를 생성하고 다음과 같이 입력합니다.
  -. 이제 라우터를 설정합니다.
     npm install vue-router --save 명령어로 Vue 라우터 패키지를 설치합니다.
     C:\Portal\VUE_EXAM\movie\backend>cd ../
     C:\Portal\VUE_EXAM\movie\>cd ../frontend
     C:\Portal\VUE_EXAM\movie\frontend>npm install vue-router --save
  -. fontend/src/routes/index.js를 생성하여, 다음과 같이 입력합니다.
  -. 라우터를 생성했으므로, frontend/src/app.vue에서는 <router-view> 요소를 넣어줍니다.
  -. API 통신을 위해 npm install axios --save 명령을 실행하여, axios 패키지를 설치합니다.
  -. 그리고 frontend/src/main.js를 다음과 같이 수정합니다.

Step6. 마무리
  -. Vue 서버를 실행하여, 정상 동작하는지 확인합니다.

  -. npm run build 명령으로 빌드 실행 후, localhost:3000에서도 동일한 화면을 볼수 있다면 실습은 성공입니다.
  -. 이 과정으로 프론트엔드와 백엔드가 어떻게 데이터를 주고받는지 알 수 있었습니다.
     다음 파트에서는 정적인 데이터가 아닌 Express + MySQL로 DB 연동을 통해 동적 데이터 다루는 법을 소개하겠습니다.
=================================================================



=================================================================
<Part2. Express + MySQL로 DB 연동하기>
=================================================================
Step1. MySQL Workbench 설치 및 실행
  -. MySQL Workbench을 아래 경로에서 다운 받습니다.
     https://dev.mysql.com/downloads/workbench/
  -. 설치를 하는 과정에서 Root 계정의 비밀번호를 받는데, 이때 입력한 비밀번호를 반드시 기억하도록 합니다.

Step2. DB 생성

Step3. 데이터를 입력받을 프론트 화면 마크업
  -. public/index.html 파일을 하나 생성하고 데이터를 받을 수 있는 간단한 마크업을 추가합니다.
     submit을 누르면, 각 인풋에 선언된 name 값을 통해 데이터를 전송합니다.
  -. npm start로 서버를 실행한 뒤, localhost:3000 에서 확인합니다.

Step4. 백엔드 처리
  -. npm install mysql --save 명령어로 mysql 패키지를 설치한 뒤, app.js에 다음 내용을 추가합니다.
     connection 객체는 설치한 DB 환경에 맞는 값으로 변경해줍니다.
  -. npm start로 서버를 다시 실행하고, 데이터를 입력해봅니다.
     모든 과정에 문제가 없다면, success라는 메시지를 확인할 수 있고, DB 테이블에 레코드가 하나 생긴 것을 확인할 수 있습니다.
=================================================================



=================================================================
<Part3. Mix All — 로그인/회원가입 기능 개발하기>
=================================================================
Step1. 가입
  -. 아이디, 이름, 비밀번호 세 가지 데이터를 받는 단순한 폼입니다.
     프론트엔드에서 SignUp.vue 컴포넌트를 생성합니다.

Step2. 백엔드의 routes/users.js에 넣어줄 부분입니다.

Step3. 로그인
  -. 프론트엔드에 login.vue를 생성하고 아래 코드와 같이 폼을 구성합니다.
  -. 백엔드의 users.js에서는 입력받은 아이디와 동일한 사용자를 찾습니다. 데이터가 있으면, 비밀번호를 한번 더 체크합니다.

Step3. 사용자 정보 확인
  -. 가입된 사용자의 아이디, 이름을 확인할 수 있는 페이지입니다.
  -. 프론트엔드에 userList.vue 컴포넌트를 생성합니다.
     /api/users/를 호출해 백엔드로부터 사용자 정보를 받은 후, users 배열에 저장합니다.
  -. 백엔드의 users.js에서는 테이블(users)에 있는 모든 데이터를 가져오는 처리를 합니다.
=================================================================
●●●●●●●●●●●●●●●●●●●● [vue.js node.js 연동] ●●●●●●●●●●●●●●●●●●●●







>>>>>>>>>> [2021-01-14 오전 10:30] <<<<<<<<<<
<박태우 대리>
C:\Portal\VUE_EXAM\movie>docker run -d -it --name aaa -v %cd%:/app -e CHOKIDAR_USEPOLLING=true -p 8080:8080 node:14.15.4


# vuetify 사용법
  -. 컴포넌트 : table, 등등


# node es6버전으로 개발하고 babel 이용해서 es5 버전으로 실행되는지 검토
<es6 to es5 babel>
https://indienote.tistory.com/494
https://jeonghwan-kim.github.io/2016/07/19/babel.html
https://hokeydokey.tistory.com/43
  -. es6에서는 arrow-function , class, const와 let의 출현 , promise 객체 등
  -. 그런 와중 Babel 이라는 트랜스파일러가 등장했는데 이 바벨은 es6 문법을 es5로 변환시켜 준다.
  -. 파일이 작성되었다면 터미널에 다음과 같이 작성하고 실행한다.
     npx babel src -d test.js
     그럼 폴더에 test.js라는 폴더가 생성되고 es5문법으로 변한 코드를 볼 수 있다.
     전체 소스를 하려면? 자동으로 변환되게 하려면?
>>>>>>>>>> [2021-01-14 오전 10:30] <<<<<<<<<<





>>>>>>>>>> [2021-01-15 오전 08:50] <<<<<<<<<<
# Nginx 웹서버
  -. Nginx 와 Vue(vuetify) 연동

# vuetify 사용법
  -. 컴포넌트 : table, 등등

# 차트? 파이썬 소스 분석해서 Java Script로 변환
  -. 하이차트
  -. 이차트
  -. 캔버스차트
  -. 아이차트




< node 관련 >
  https://nodejspedia.com/ko/tutorial/9752/--------node-js-----------
  https://nodejspedia.com/ko/tutorial/5934/es6------node-js
       var thing = require('thing') 대신 import thing from 'thing'


< babel 관련 >
  https://beomi.github.io/2017/10/18/Setup-Babel-with-webpack/
  https://velopert.com/1344
      import ___ from '___' 는 var ___ = require('___') 의 ES6 문법입니다.
      () => { } 형태의 코드는 ES6 에 도입된 “Arrow Function” [3] 입니다. function(){ } 와 같은 의미이죠.






=================================================================
<[node] Express 프로젝트 생성, Get Api 만들기>  --  https://firework-ham.tistory.com/21
=================================================================
Express는 node 활용을 도와주는 웹 프레임워크입니다.
Express를 사용하면 쉽게 노드 서버 생성이 가능합니다. 

1. node, npm 설치하기.
2. Express 프로젝트 생성하기.
  C:\Portal\VUE_EXAM\babeltest>npm install express-generator -g
  C:\Portal\VUE_EXAM\babeltest>express my-server
  C:\Portal\VUE_EXAM\babeltest>cd my-server
  C:\Portal\VUE_EXAM\babeltest\my-server>npm install
  C:\Portal\VUE_EXAM\babeltest\my-server>npm start
    포트가 지정되지 않았다면 3000번을 사용합니다.
    만약, 수정하고 싶으시다면 bin 폴더에 www파일의 port를 수정합니다.
    var port = normalizePort(process.env.PORT || '5000');
    정상적으로 서버가 실행되었는지 localhost:5000으로 웹 브라우저에서 접속하여 확인하세요.

3. 폴더 구조
  -. app.js는 node 서버에서 엔트리 포인트입니다.
  -. 서버의 처음은 app.js에서 시작합니다.
     서버의 흐름을 알고 싶다면 app.js에서부터 천천히 따라가면 됩니다.
  -. routes 폴더는 라우팅에 따라 마지막 엔드포인트가 되는 파일들을 저장해 놓은 폴더입니다.
     라우팅은 애플리케이션의 앤드포인트를 정의 클라이언트 요청에 따라 응답하는 방식을 말합니다.
  -. public 폴더는 css, image 파일 등 프런트에서 사용할 리소스들을 저장하는 폴더입니다.
     서버만 사용한다면 의미 없는 폴더입니다.
4. Get API 만들기.
  -. index.js 파일에 새로운 url 앤드포인트를 정의하여 Get API를 만들어 보겠습니다.
     아래 코드를 넣어주세요.

     router.get('/documents/:id', (req,res) => {
         res.json({id: req.params.id});
     });
     코드는 documents 엔트리 포인트를 생성하여 id를 param로 받는 get api입니다.

     코드를 추가하였다면 재실행해주세요.
     npm start

     브라우저로 아래 url를 입력하여 데이터가 정상적으로 표시되는지 확인합니다.
     http://localhost:3000/documents/879
     {"id":"879"}
     id가 나오면 정상 동작입니다.
5. 마치며
  -. Express를 사용하면 빠르게 서버 구현이 가능합니다.
     간단한 API 테스트를 위해 서버가 필요할 때 사용하면 상당히 좋습니다.
     서버가 필요할때 Express를 활용해보세요.




############### [node es6버전으로 개발하고 babel 이용해서 es5 버전으로 실행되는지 검토] ###############
<es6 to es5 babel>
https://hokeydokey.tistory.com/43
  -. es6에서는 arrow-function , class, const와 let의 출현 , promise 객체 등
  -. 그런 와중 Babel 이라는 트랜스파일러가 등장했는데 이 바벨은 es6 문법을 es5로 변환시켜 준다.

  1. 해당 프로젝트를 npm init
  2. 개발환경에 추가하기 위해 -dev를 추가한다.
     npm install --save-dev @babel/core @babel/cli
     npm install babel-preset-env --save-dev
     프로젝트 최상위 폴더에 .babelrc 라는 파일을 만들고 내부에 다음과같이 설치한 preset이름을 적어준다.
     {
         "presets" : [
             "env"
         ]
     }
     프로젝트 최상위 폴더에 src라는 폴더를 만들고 나는 그곳에 test.js 파일을 만들었다.
  4. npx babel src -d test.js
     그럼 폴더에 test.js라는 폴더가 생성되고 es5문법으로 변한 코드를 볼 수 있다.


https://jeonghwan-kim.github.io/2016/07/19/babel.html
  1. 설치
     계속 사용하려면 전역으로 설치
     npm install babel-cli -g

  2. ES5 코드로 변환하기 위해서는 es2015 프리셋을 사용해야한다.
     npm install babel-preset-es2015 --save
     프리셋을 설치한 뒤 .babelrc 파일을 작성한다.
     {
         "presets": [
             "es2015"
         ]
     }
  3. babel 명령어로 코드를 변환할 때는 -d, -w 옵션을 사용할 수 있다.
     npx babel src -d dist -w
     src 폴더에 ES6 코드를 작성하고 변환된 코드는 dist 폴더에 저장한다.
     또한 src 폴더 내의 파일의 변경된 내용을 감지해서 자동으로 변환작업을 수행하도록 하는 명령어다.


https://indienote.tistory.com/494
  1. 설치
     npm install --save-dev babel-cli
     npm install --save-dev babel-preset-env
  2. .babelrc 파일 생성
     { "presets": ["es2015"] }
     { "presets": ["env"] }    프리셋을 "env" 로 설정하면 babel-preset-latest 라고 불리는 현재 지원 가능한 가장 최신 버전의 프리셋을 사용
  3. 테스트
     // /src/es6test.js
        const myconst = 123;
        let mylet = 456;
     위와 같이 파일을 하나 만들고 터미널에서 아래와 같이 실행하면
     npx babel ./src/es6test.js

     npx babel ./src/es6test.js --out-file ./dist/es5test.js --presets=es2015
     화면에 뿌리지 말고 트랜스파일 된 파일로 저장하도록 --out-file 옵션도 사용한다.
     es5test.js 파일을 열어보면 아래와 같이 ES5 코드로 변경되었음을 알 수 있다.
     // es5test.js
        "use strict";
        var myconst = 123;
        var mylet = 456
############### [node es6버전으로 개발하고 babel 이용해서 es5 버전으로 실행되는지 검토] ###############

>>>>>>>>>> [2021-01-15 오전 08:50] <<<<<<<<<<






>>>>>>>>>> [2021-01-18 오전 09:00] <<<<<<<<<<
C:\Portal\VUE_EXAM\movie\backend>npm install bcryptjs --save
C:\Portal\VUE_EXAM\movie\backend>npm start



# Nginx 웹서버
  -. Nginx 와 Vue.js(vuetify) 연동

# vuetify 사용법
  -. 컴포넌트 사용법 >>> table, 등등

# 차트? 파이썬 소스 분석해서 Java Script로 변환
  -. 이차트
  -. 하이차트
  -. 캔버스차트
  -. 아이차트



[vue.js nginx 배포 / vue.js nginx 연동]
https://brunch.co.kr/@springboot/188
https://jojoldu.tistory.com/291
https://dev-taem.tistory.com/m/3
https://hplayground.tistory.com/m/105


[윈도우 nginx 설치]
https://wlsufld.tistory.com/4
    http://nginx.org/en/download.html



[vue vuetify example]
<복잡>
  https://mangdan.github.io/meetup-handson-env-app-1/
  https://mangdan.github.io/meetup-handson-env-app-2/
  https://mangdan.github.io/meetup-handson-env-app-3/
<복잡 -- open source download>
  https://awesomeopensource.com/projects/vuetify
    https://awesomeopensource.com/project/creativetimofficial/vuetify-material-dashboard
<별로>
  https://jordino.tistory.com/20
  https://skypacific.github.io/2019/02/07/kang.heehun@introduce_vuejs.html
  https://skypacific.github.io/2019/02/16/kang.heehun@introduce_vuetify.html

<괜찮음>
  https://velog.io/@jsg3121/1달-1사이드-프로젝트-첫번째-1



<<<<< [Vuetify] 메뉴 만들기 (With Vuex) ::: https://dev-josh.tistory.com/m/12 >>>>>
  C:\Portal\VUE_EXAM\vuetilfy_menu-master>npm install -g @vue/cli
  C:\Portal\VUE_EXAM\vuetilfy_menu-master>vue create frontend
  C:\Portal\VUE_EXAM\vuetilfy_menu-master>cd frontend
  C:\Portal\VUE_EXAM\vuetilfy_menu-master\frontend>vue add vuetify
  C:\Portal\VUE_EXAM\vuetilfy_menu-master\frontend>npm run serve
    -. locahost:8080으로 접속해서 확인하기

  C:\Portal\VUE_EXAM\vuetilfy_menu-master\frontend>npm install --save axios    // axios모듈 설치
  C:\Portal\VUE_EXAM\vuetilfy_menu-master\frontend>npm install --save vue-router vuex    // vue-router 및 vuex 설치
  --C:\Portal\VUE_EXAM\vuetilfy_menu-master\frontend>npm install --save vuex-persistedstate    // persistedstate 설치





+++++++++++++++++++++++++ [업무회의 ::: 2021-01-19 오후 5:52] +++++++++++++++++++++++++
  -. 업무분장
     - CASE Detector --> C#으로 되어 있음. echart 사용할거임. 정형소스 참조해서 개발.
     - 정형 --> 화면 2개 더 개발해야 됨. (아직 화면 안나옴)
+++++++++++++++++++++++++ [업무회의] +++++++++++++++++++++++++
>>>>>>>>>> [2021-01-18 오전 09:00] <<<<<<<<<<





>>>>>>>>>> [2021-01-19 오전 09:00] <<<<<<<<<<
------------------------------------------------------------------------------------------
설치방법 -- Vue.js
https://kr.vuejs.org/v2/guide/installation.html
------------------------------------------------------------------------------------------
Vue.js SPA를 생성하고 Vuetify 머터리얼 디자인 적용
https://skypacific.github.io/2019/02/16/kang.heehun@introduce_vuetify.html
------------------------------------------------------------------------------------------
vuetify를 사용하기 위해 vue.js를 알아가는 중
https://blog.minamiland.com/358
------------------------------------------------------------------------------------------
★★★ [Vue-013] - 프로젝트 구조, 플러그인 설치(vuetify.js) ★★★
https://blog.naver.com/bkcaller/221462018264
------------------------------------------------------------------------------------------
"Do it! Vue.js 입문" 책 예제 코드
https://github.com/joshua1988/doit-vuejs
------------------------------------------------------------------------------------------
백견불여일타 Vue.js 입문 : 예제와 실습문제에 집중한 프론트엔드 입문서
백견불여일타 카페에서 다운로드 받을 수 있습니다.
https://cata.naver.com/codefirst    접속안됨
https://naver.com/F0KXXNRq    Vue.js 입문 예제소스입니다.
------------------------------------------------------------------------------------------




+++++++++++++++ [자산운용_DAM YONA ::: https://colla.kbtda.com/yona] +++++++++++++++
-------------------------------------------------------------------------------------------------------------------
  -. #114 KB지주_DAM_Cloud SQL 접속 설정
     Cloud SQL 접속 (공통 [첨부된 key] 로 접속이 안되시면, 개별 key를 발급해야 할 듯 합니다.)
     SSL 클라이언트 인증서 [kbdam] 등록 키 (첨부파일) 다운로드.
     GCP > SQL > 연결 > 공개IP > 승인된네트워크 IP 등록

     참조URL :
     https://cloud.google.com/sql/docs/mysql/connect-admin-ip?hl=ko
     https://cloud.google.com/sql/docs/mysql/admin-tools?hl=ko

     클라우드 SQL 접속 방법(workbench or sqldeveloper)
     ip : 34.64.147.74
     port : 3306
     id/pwd : root/1234
-------------------------------------------------------------------------------------------------------------------
  -. #94 KB지주_DAM_표준화작업문서_20210118
     KB지주_DAM_별첨_01.데이터표준화방안_v0.3_20210112.ppt
     KB지주_DAM_별첨_02.테이블설계가이드_v0.4_20210118.pptx
     KB지주_DAM_별첨_03.개발표준정의서_SQL작성가이드_v0.3_20210112.pptx
     작업문서테이블 목록 및 정의서_v0.5_20210114 <-- 포털 테이블 목록 추가

     KB지주_DAM_별첨_03.개발표준정의서_SQL작성가이드_v0.3_20210112.pptx(125.38 Kb)
     KB지주_DAM_별첨_05.표준용어및표준단어_v0.2_20210112.xls(137.50 Kb)
     KB지주_DAM_별첨_01.데이터표준화방안_v0.3_20210112.ppt(2.26 Mb)
     __작업문서__테이블 목록 및 정의서_v0.5_20210114.xlsx(844.86 Kb)
     KB지주_DAM_별첨_02.테이블설계가이드_v0.4_20210118.pptx(70.85 Kb)
-------------------------------------------------------------------------------------------------------------------
  -. #87 KB지주_DAM_Gitlab( 업무별 AS-IS 업무소스 )
     주소 : http://34.64.70.128
     id/pwd : jinuk.shin / !qaz2wsx

     Case Detector : amdt / kbai-casedetector
     Credit Monitor : amdt / KBAI-creditmonitor
     정형 : amdt / KBAI-frontend
              amdt / KBAI-backend
-------------------------------------------------------------------------------------------------------------------
  -. #120 KB지주_[DAM]_외부망 프린터 정보
     프린터 추가 시 필요정보
     TCP/IP 주소 또는 호스트 이름으로 프린터 추가
     IP : 10.17.126.124
     모델명 : EPSON ESC/page V4 Class
-------------------------------------------------------------------------------------------------------------------
  -. #44 KB지주_[Case Detector]_Case Detector 수집 관련
     RealTime_ExcelData.xlsx : InfoMax 데이터
     db_insert_asset.py : InfoMax 데이터 읽어서 dat_strd_mprc, dat_strd_cprc 테이블에 Insert 하는 소스
     test_json_ktb10yf.json : DLL 실행할 input data(date, time, close)
     output.json : DLL 실행후 output data(date, score)

     상품선물 데이터 : TR목록시트에서 상품선물 체결 선택
     KRX지수 데이터 : TR목록시트에서 KOSPI200지수 선택

     db_insert_asset.py(11.01 Kb)
     RealTime_ExcelData.xlsx(128.64 Kb)
     output.json(726 bytes)
     test_json_ktb10yf.json(2.49 Mb)
     상품선물_실시간_인터넷(KRX)_1.290_2021010510.xls(260.50 Kb)
     KRX지수_실시간_인터넷(KRX)_1.530_2021010510.xls(1.07 Mb)
-------------------------------------------------------------------------------------------------------------------
+++++++++++++++ [YONA] +++++++++++++++


SOURCE TREE
git bash

https://git-scm.com/


ipconfig /all
wmic diskdrive get name, model, serialnumber



+++++++++++++++ [Case Detector : amdt / kbai-casedetector] +++++++++++++++
<Credit Monitor -- C#에서 사용하는 차트>
  https://demos.devexpress.com/xtrachartsdemos/


<echart vuetify example>
  https://echarts.apache.org/examples/en/index.html
  https://dongmin-jang.medium.com/vue-js-chart-js-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%B0%A8%ED%8A%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0-2b8fadd0a1d5
  https://vuejsexamples.com/tag/echarts/
  https://vuejsprojects.com/vue-echarts
  https://ecomfe.github.io/vue-echarts/demo/
+++++++++++++++ [Case Detector : amdt / kbai-casedetector] +++++++++++++++


+++++++++++++++ [정형 : amdt / KBAI-frontend] +++++++++++++++
C:\Portal\KBDAM\kbai-frontend>npm run serve

> frontend@0.1.0 serve C:\Portal\KBDAM\kbai-frontend
> vue-cli-service serve --mode local

 INFO  Starting development server...
98% after emitting CopyPlugin

These dependencies were not found:

* echarts in ./src/mixins/echartsInstance.js
* vue-axios in ./src/main.js
 ERROR  Failed to compile with 4 errors            오후 3:00:27
These dependencies were not found:

* echarts in ./src/mixins/echartsInstance.js
* vue-axios in ./src/main.js
* vue-toast-notification in ./src/main.js
* vue-toast-notification/dist/theme-sugar.css in ./src/common/toast.js

To install them, you can run: npm install --save echarts vue-axios vue-toast-notification vue-toast-notification/dist/theme-sugar.css
+++++++++++++++ [정형 : amdt / KBAI-frontend] +++++++++++++++
>>>>>>>>>> [2021-01-19 오전 09:00] <<<<<<<<<<





>>>>>>>>>> [2021-01-20 오전 09:00] <<<<<<<<<<
# git 설치 및 설정
=======================================================
  C:\Users\Administrator>cd /
  C:\>mkdir gittest
  C:\>cd gittest
  C:\gittest>git config --global user.name "pys018"
  C:\gittest>git config --global user.email "pys018@daum.net"
  C:\gittest>git init
     Initialized empty Git repository in C:/gittest/.git/
  C:\gittest>git add work_20210111.txt
  C:\gittest>git commit -m work_20210111.txt
     [master (root-commit) c26dcd6] work_20210111.txt
      1 file changed, 1037 insertions(+)
      create mode 100644 work_20210111.txt
  C:\gittest>git status
     On branch master
     nothing to commit, working tree clean
  C:\gittest>git remote add origin https://github.com/pys018/TEST
  C:\gittest>git push origin master
     info: please complete authentication in your browser...
     To https://github.com/pys018/TEST
      ! [rejected]        master -> master (fetch first)
     error: failed to push some refs to 'https://github.com/pys018/TEST'
     hint: Updates were rejected because the remote contains work that you do
     hint: not have locally. This is usually caused by another repository pushing
     hint: to the same ref. You may want to first integrate the remote changes
     hint: (e.g., 'git pull ...') before pushing again.
     hint: See the 'Note about fast-forwards' in 'git push --help' for details.
  C:\gittest>
  C:\gittest>git push origin master
     To https://github.com/pys018/TEST
      ! [rejected]        master -> master (fetch first)
     error: failed to push some refs to 'https://github.com/pys018/TEST'
     hint: Updates were rejected because the remote contains work that you do
     hint: not have locally. This is usually caused by another repository pushing
     hint: to the same ref. You may want to first integrate the remote changes
     hint: (e.g., 'git pull ...') before pushing again.
     hint: See the 'Note about fast-forwards' in 'git push --help' for details.
  C:\gittest>
  C:\gittest>git push master master
     fatal: 'master' does not appear to be a git repository
     fatal: Could not read from remote repository.

     Please make sure you have the correct access rights
     and the repository exists.
  C:\gittest>
  C:\gittest>git commit -am "work_20210111.txt"
     On branch master
     nothing to commit, working tree clean
=======================================================
Administrator@YOUNG MINGW64 /c
$ cd gittest/
Administrator@YOUNG MINGW64 /c/gittest (master)
$ ls
work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ touch testtest.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ ls
testtest.txt  work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git config --global user.name "pys018"
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git config --global user.email "pys018@daum.net"
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git add .
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git commit -m "first commit"
[master 18ddf26] first commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 testtest.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git log --oneline
18ddf26 (HEAD -> master) first commit
c26dcd6 work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ touch text.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ ls
testtest.txt  text.txt  work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git add .
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git commit -m "text.txt added"
[master 9114a83] text.txt added
 2 files changed, 1 insertion(+)
 create mode 100644 text.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git log --oneline
9114a83 (HEAD -> master) text.txt added
18ddf26 first commit
c26dcd6 work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ ls
testtest.txt  text.txt  work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git reset --hard 18ddf26
HEAD is now at 18ddf26 first commit
Administrator@YOUNG MINGW64 /c/gittest (master)
$ ls
testtest.txt  work_20210111.txt
Administrator@YOUNG MINGW64 /c/gittest (master)
$ git log --oneline
18ddf26 (HEAD -> master) first commit
c26dcd6 work_20210111.txt

Administrator@YOUNG MINGW64 /c/gittest (master)
$ git remote add origin https://github.com/pys018/TEST.git
error: remote origin already exists.

Administrator@YOUNG MINGW64 /c/gittest (master)
$ git push -u origin master
To https://github.com/pys018/TEST
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/pys018/TEST'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

Administrator@YOUNG MINGW64 /c/gittest (master)
$ git push -f origin master
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 12.17 KiB | 3.04 MiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/pys018/TEST
 + e400860...18ddf26 master -> master (forced update)


Administrator@YOUNG MINGW64 /
$ cd c/
Administrator@YOUNG MINGW64 /c
$ ls
'$Recycle.Bin'/             OneDriveTemp/                 Temp10/   Windows/
'$WinREAgent'/              PerfLogs/                     Temp2/    app/
 1.cosmax/                  Portal/                       Temp3/    bootmgr
 BOOTNXT                   'Program Files'/               Temp4/    gittest/
'Documents and Settings'@  'Program Files (x86)'/         Temp5/    hiberfil.sys
 DumpStack.log.tmp          ProgramData/                  Temp6/    nginx-1.18.0/
 Intel/                     Recovery/                     Temp7/    pagefile.sys
 Java/                      Somansa/                      Temp8/    swapfile.sys
 MSOCache/                 'System Volume Information'/   Temp9/    vuejs-project/
 NetMan/                    Temp/                         Users/
Administrator@YOUNG MINGW64 /c
$
Administrator@YOUNG MINGW64 /c
$ mkdir workspace
Administrator@YOUNG MINGW64 /c
$ cd workspace/
Administrator@YOUNG MINGW64 /c/workspace
$ git clone https://github.com/pys018/TEST.git
Cloning into 'TEST'...
remote: Enumerating objects: 12, done.
remote: Counting objects: 100% (12/12), done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 12 (delta 0), reused 6 (delta 0), pack-reused 0
Receiving objects: 100% (12/12), 13.32 KiB | 1.48 MiB/s, done.
Administrator@YOUNG MINGW64 /c/workspace
$
Administrator@YOUNG MINGW64 /c/workspace
$ ls
TEST/
Administrator@YOUNG MINGW64 /c/workspace
$
Administrator@YOUNG MINGW64 /c/workspace
$ cd TEST/
Administrator@YOUNG MINGW64 /c/workspace/TEST (main)
$ ls
README.md
Administrator@YOUNG MINGW64 /c/workspace/TEST (main)
$


------------------------------------------------------------------------------------------
$ git push origin +master
------------------------------------------------------------------------------------------
$ git pull --rebase origin master
------------------------------------------------------------------------------------------
$ git push -f origin master

그래도 안되는 경우도 있습니다. 그럴 경우는 "pull" >  "push -f" 하시면 됩니다.
$ git pull
$ git push -f origin master

git push 만 입력하고 업데이트를 진행하고 싶다면 push -u으로 하시면 됩니다.
$ git push -u origin master
------------------------------------------------------------------------------------------
=======================================================


# url 직접치고 들어가보기
# 계산로직 있나 확인



# Case Detector 스토리보드 검토
  -. #115 KB지주_[Case Detector]_스토리보드 리뷰후 검토사항
     02_자산운용DT_Case Detector_스토리보드_v0.22_210118.pptx(1.59 Mb)    4페이지에 알림창 내용 추가, 개발검토 필요
     (CD)테이블정보 추가 및 쿼리(차트)Flow.xlsx(19.32 Kb)
     Script2DateList.cs(20.36 Kb)
     CASE화면 알림창.png(123.34 Kb)
>>>>>>>>>> [2021-01-20 오전 09:00] <<<<<<<<<<







>>>>>>>>>> [2021-01-21 오전 09:00] <<<<<<<<<<
◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆
-----npm install vuejs

[Vue.js란? Vue-001 ~ Vue-034]
https://m.blog.naver.com/bkcaller/221456846541

C:\Portal\>mkdir VUESTUDY
C:\Portal\VUESTUDY>cd VUESTUDY
C:\Portal\VUESTUDY>npm install -g @vue/cli
C:\Portal\VUESTUDY>vue create my-first-vue
C:\Portal\VUESTUDY>cd my-first-vue
C:\Portal\VUESTUDY\my-first-vue>npm run serve


C:\Portal\VUESTUDY\my-first-vue>vue add vuetify
C:\Portal\VUESTUDY\my-first-vue>npm install --save vue-router
C:\Portal\VUESTUDY\my-first-vue>npm install --save vuex
C:\Portal\VUESTUDY\my-first-vue>npm install --save axios
C:\Portal\VUESTUDY\my-first-vue>npm run serve
◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆





========================================
#27 KB지주_DAM_as-is 화면 캡쳐본 이혜선 @z013374
  -. CASE DETECTOR 화면 캡쳐.zip(502.81 Kb)
  -. 비정형데이터 화면.zip(914.13 Kb)
  -. 정형데이터 화면.zip(1.95 Mb)
========================================




========================================
http://kbcase.co.kr  (http://175.214.107.59:7942/setup.exe)
ID : KBDT1 / KBDT1
========================================
>>>>>>>>>> [2021-01-21 오전 09:00] <<<<<<<<<<







>>>>>>>>>> [2021-01-22 오전 09:00] <<<<<<<<<<
https://kr.vuejs.org/v2/guide/installation.html
https://vuetifyjs.com/en/components/text-fields/#api
https://m.blog.naver.com/bkcaller/221457669330


echart vuetify example
https://echarts.apache.org/examples/en/index.html
https://dongmin-jang.medium.com/vue-js-chart-js-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%B0%A8%ED%8A%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0-2b8fadd0a1d5
https://vuejsexamples.com/a-echart-library-for-vue-js/
https://vuejsprojects.com/vue-echarts
>>>>>>>>>> [2021-01-22 오전 09:00] <<<<<<<<<<







>>>>>>>>>> [2021-01-25 오전 09:00] <<<<<<<<<<
---------------------------------------------------------------------------------------------------------
#45 KB지주_Front_스토리보드_[05_정형데이터] (작업중) 이혜선 @z013374 변경 이력

01/ 04 Deep Learning 화면 작업본(정리 중)

현업 리뷰 시 문의할 사항 포함
Backtesting & Simulation / Portfolios 메뉴는 추가 리뷰 자리 필요
01/12 현업리뷰 후 수정본
01/22 현업 자료로 SB 업데이트 - 확인 및 질의응답 필요

04_자산운용DT_정형_스토리보드_v0.12_210122.pptx
---------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------
#98 KB지주_[회의록]_20210112_정형_추가메뉴현업리뷰 이혜선 @z013374

20210112 16:00~17:10
Baacktesting & Simulation, Portfolio
2개의 메뉴에 대한 현업 설명 자리

KB지주_회의록_20210112_정형_추가메뉴현업리뷰.docx(22.89 Kb)
---------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------
#130 KB_DAM_화면 개발일정
 심문보 @z013375
프로그램 목록 및 담당자 매핑.xlsx(16.77 Kb)
---------------------------------------------------------------------------------------------------------
>>>>>>>>>> [2021-01-25 오전 09:00] <<<<<<<<<<









>>>>>>>>>> [2021-01-26 오전 09:00] <<<<<<<<<<
---------------------------------------------------------------------------------------------------------
#118 KB_DAM_개발표준 정의_포털    심문보 @z013375
KB지주_DAM_개발표준정의서_v0.1.doc(290.50 Kb)
KB지주_DAM_개발가이드_v0.1_이혜선수정.docx(112.77 Kb)
---------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------
게시판 » KBDAM_게시판 » KBDAM_정형 »

KBDAM_정형_스토리보드    이 혜선이(가) 약 한시간 전에 추가함

01/26 Backtesting&Simulation, Portfolio 화면 업데이트 (전체 화면)
          - 내부 개발 확인 및 현업 검토 필요

04_자산운용DT_정형_스토리보드_v0.13_210126.pptx (4.65 MB)
---------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------
게시판 » KBDAM_게시판 » KBDAM_Case Detector »

KBDAM_Case Detector_스토리보드    이 혜선이(가) 약 19시간 전에 추가함

01/26 현재버전 스토리보드 - 개발 내부 논의 후 description 수정, 추가 문의사항 정리
       - 26일 오후 장준영대리님과 개발자 내부 협의 에정, 이후 스토리보드 업데이트 진행 예정
       - 26일 최종 협의내용 반영 : 기존 스토리보드에 일부 수정, 버전 유지

첨부파일
02_자산운용DT_Case Detector_스토리보드_v0.23_210126.pptx (1.59 MB)
---------------------------------------------------------------------------------------------------------
>>>>>>>>>> [2021-01-26 오전 09:00] <<<<<<<<<<








>>>>>>>>>> [2021-01-27 오전 09:00] <<<<<<<<<<
# json data 건수 많이해서 테스트
# tooltip
  -. 23 (20210111 13:30) 표시되게?
  -. 바차트는 표시 안되게 --> 버티컬라인을 라인차트위에 그릴 수 있으면 상관없음

# apache echarts tooltip formatter 검색
  https://stackoverflow.com/questions/60278375/how-to-add-formatter-tooltip-in-echart-for-multiple-values-for-pie-diagram



devextreme vertical lines



++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[ https://echarts.apache.org/en/option.html#tooltip.formatter ]

tooltip. formatter 로 검색

The content formatter of tooltip's floating layer which supports string template and callback function.

1. String template
  The template variables are {a}, {b}, {c}, {d} and {e}, which stands for series name, data name and data value and ect. When trigger is set to be 'axis', there may be data from multiple series. In this time, series index can be refered as {a0}, {a1}, or {a2}.

  {a}, {b}, {c}, {d} have different meanings for different series types:

  -. Line (area) charts, bar (column) charts, K charts
     {a} for series name, {b} for category name, {c} for data value, {d} for none;

  -. Scatter (bubble) charts: {a} for series name, {b} for data name, {c} for data value, {d} for none;
  -. Map: {a} for series name, {b} for area name, {c} for merging data, {d} for none;
  -. Pie charts, gauge charts, funnel charts: {a} for series name, {b} for data item name, {c} for data value, {d} for percentage.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



=============================================
<금주>
# Case Detector
  -. 스토리보드 검토 및 회의
  -. AS-IS 화면 분석
  -. echarts 기능검토 : 버티컬라인 표시 및 라인옆에 일자 및 시간 표시, 툴팁에 X축값이외에 날짜/시간표시

# 정형
  -. Backtesting & Simulation / Portfolios 스토리보드 검토 및 회의


<차주>
# Case Detector
  -. FICC 화면개발 : UI 화면 그리기
=============================================
>>>>>>>>>> [2021-01-27 오전 09:00] <<<<<<<<<<








>>>>>>>>>> [2021-01-28 오전 09:00] <<<<<<<<<<
##################################################
vue add vuetify
npm install --save vue-router
npm install --save vuex
npm install --save axios
npm install --save vue-axios


Cannot read property padStart of undefined
##################################################






##################################################
<template v-slot:activator="{ on, attrs }">
	<v-text-field
		v-model="dateFormatted"
		label="Date"
		hint="YY/MM/DD"
		persistent-hint
		prepend-icon="mdi-calendar"
		v-bind="attrs"
		@blur="date = parseDate(dateFormatted)"
		v-on="on"
	></v-text-field>
</template>



<v-text-field
	v-mask="'##-##-##'"
	v-model="ficcInputDate"
	label=""
	hint="YY-MM-DD"
	persistent-hint
	placeholder="YY-MM-DD"
></v-text-field>



<v-checkbox v-model="checkbox">
	<template v-slot:label>
		<div>
			I agree that
			<v-tooltip bottom>
				<template v-slot:activator="{ on }">
					<a
						target="_blank"
						href="http://vuetifyjs.com"
						@click.stop
						v-on="on"
					>
					Vuetify
					</a>
				</template>
				Opens in new window
			</v-tooltip>
			is awesome
		</div>
	</template>
</v-checkbox>





https://github.com/probil/v-mask
  -. npm install v-mask
##################################################
>>>>>>>>>> [2021-01-28 오전 09:00] <<<<<<<<<<







>>>>>>>>>> [2021-01-29 오전 09:00] <<<<<<<<<<
let replaced_str = str.replace(/banana/g, 'tomato');



>>>>> today 222 ::: 2021-01-29T09:11:50.797Z



npm install echarts



"0D+1H", "0D+2H", "0D+3H", "0D+4H", "0D+5H", "0D+6H", "1D+0H", "2D+0H"

OD+1H
OD+2H
OD+3H
OD+4H
OD+5H
OD+6H
1D+0H
2D+0H





<http://www.objgen.com/json>
code = 0000
msg = ok
data [0]
	id n = 1
	name = 홍길동
	addr = 제주시
	age = 32
	gender = M
data [1]
	id n = 2
	name = 홍길순
	addr = 서귀포시
	age = 36
	gender = F





<template v-slot:item.sendcertified="{ item }">
	<img :src="\${item.sendcertified}\" style="width: 50px; height: 50px" />
</template>

<template v-slot:item.excludefrommailing="{ item }">
	<img :src="\${item.excludefrommailing}\" style="width: 50px; height: 50px" />
</template>
>>>>>>>>>> [2021-01-29 오전 09:00] <<<<<<<<<<









>>>>>>>>>> [2021-01-30 오전 09:00] <<<<<<<<<<

ficcInputDate --> srchDate
ficcInputTime --> srchTime

ficcAssetSelected --> assetSelected
ficcAssetOptions --> assetOptions

ficcOffsetSelected --> offsetSelected
ficcOffsetItems --> offsetOptions

ficcRefreshSelected --> refreshSelected
ficcRefreshItems --> refreshOptions

ficcXaxisUnitSelected --> xaxisUnitSelected
ficcXaxisUnitItems --> xaxisUnitOptions





:style="{'background-color': item.ShipmentBy === null ?'red' :'' }"
<td :style="{'background-color': item.result0D2HVal === 50 ? 'red' : '' }">{{ item.result0D2HVal }}</td>





npm install echarts vue-echarts

// vue.config.js
module.exports = {
  transpileDependencies: [
    'vue-echarts',
    'resize-detector'
  ]
}



"export 'default' (imported as 'echarts') was not found in 'echarts'

export default (imported as echarts) was not found in echarts




"import echarts from 'echarts/lib/echarts'" is not supported anymore.
Use "import * as echarts from 'echarts/lib/echarts'" instead;


echarts.js?3eba:35 
"import echarts from 'echarts/lib/echarts'" is not supported anymore.
Use "import * as echarts from 'echarts/lib/echarts'" instead;




  <v-app>
    <!-- <v-chart :options="polar"/> -->
    <echartTestpage :options="polar" class="echarts"/>
  </v-app>





v-if="analysis!==null"


<template slot="headerCell" slot-scope="props">
>>>>>>>>>> [2021-01-30 오전 09:00] <<<<<<<<<<






>>>>>>>>>> [2021-02-01 오전 09:00] <<<<<<<<<<
---------------------------------------------------------------------------------------------------------
#114 KB지주_DAM_Cloud SQL 접속 설정    박상민 @rudder 변경 이력

Cloud SQL 접속 (공통 [첨부된 key] 로 접속이 안되시면, 개별 key를 발급해야 할 듯 합니다.)

SSL 클라이언트 인증서 [kbdam] 등록 키 (첨부파일) 다운로드.
GCP > SQL > 연결 > 공개IP > 승인된네트워크 IP 등록

참조URL :
https://cloud.google.com/sql/docs/mysql/connect-admin-ip?hl=ko
https://cloud.google.com/sql/docs/mysql/admin-tools?hl=ko
---------------------------------------------------------------------------------------------------------
클라우드 SQL 접속 방법(workbench or sqldeveloper)
workbench 파일 추가

ip : 34.64.147.74
port : 3306
id/pwd : root/1234
---------------------------------------------------------------------------------------------------------
server-ca.pem(1.24 Kb)
client-key.pem(1.63 Kb)
client-cert.pem(1.20 Kb)
mysql-workbench-community-8.0.22-winx64.msi(35.87 Mb)
dotnet-sdk-5.0.102-win-x64.exe(141.66 Mb)
---------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------
#94 KB지주_DAM_표준화작업문서_20210118    양은주 @notbad1020 변경 이력
---------------------------------------------------------------------------------------------------------
KB지주_DAM_별첨_03.개발표준정의서_SQL작성가이드_v0.3_20210112.pptx(125.38 Kb)
KB지주_DAM_별첨_05.표준용어및표준단어_v0.2_20210112.xls(137.50 Kb)
KB지주_DAM_별첨_01.데이터표준화방안_v0.3_20210112.ppt(2.26 Mb)
KB지주_업무별_DataFlow아키텍쳐_v0.7_20210121.pptx(437.15 Kb)
KB지주_DAM_별첨_02.테이블설계가이드_v0.6_20210121.pptx(84.58 Kb)
KB지주_DAM_데이터흐름도_v0.21_20210112.xlsx(86.15 Kb)
KB지주_DAM_설계_테이블목록(데이터영역)_v0.1_20210122.xlsx(92.49 Kb)
__작업문서__테이블 목록 및 정의서_v0.16_20210122.xlsx(2.17 Mb)
---------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------
#44 KB지주_[Case Detector]_Case Detector 수집 관련    고성진 @rhtjdwls84 변경 이력
---------------------------------------------------------------------------------------------------------
RealTime_ExcelData.xlsx : InfoMax 데이터
db_insert_asset.py : InfoMax 데이터 읽어서 dat_strd_mprc, dat_strd_cprc 테이블에 Insert 하는 소스
test_json_ktb10yf.json : DLL 실행할 input data(date, time, close)
output.json : DLL 실행후 output data(date, score)

상품선물 데이터 : TR목록시트에서 상품선물 체결 선택
KRX지수 데이터 : TR목록시트에서 KOSPI200지수 선택
---------------------------------------------------------------------------------------------------------
db_insert_asset.py(11.01 Kb)
RealTime_ExcelData.xlsx(128.64 Kb)
output.json(726 bytes)
test_json_ktb10yf.json(2.49 Mb)
상품선물_실시간_인터넷(KRX)_1.290_2021010510.xls(260.50 Kb)
KRX지수_실시간_인터넷(KRX)_1.530_2021010510.xls(1.07 Mb)
---------------------------------------------------------------------------------------------------------




---------------------------------------------------------------------------------------------------------
KBDAM_Case Detector_테이블맵핑(ToBe-AsIs)    장 준영이(가) 4일 전에 추가함

안녕하세요. 장준영입니다.

오전에 요청주신 To-Be 테이블과 As-Is 테이블 맵핑과 예제한 엑셀파일 보내드립니다.

추가적으로 필요하신 부분있으시면 말씀부탁드립니다.


감사합니다.

장준영 드림.

첨부파일 편집
[CD]TableMapping_example.xlsx (25.7 KB) [CD]TableMapping_example.xlsx
---------------------------------------------------------------------------------------------------------






npm install --save resize-detector


npm install echarts vue-echarts

// vue.config.js
module.exports = {
  transpileDependencies: [
    'vue-echarts',
    'resize-detector'
  ]
}
>>>>>>>>>> [2021-02-01 오전 09:00] <<<<<<<<<<






>>>>>>>>>> [2021-02-02 오전 09:00] <<<<<<<<<<
---------------------------------------------------------------------------------------------------------
#121 KB지주_[Creadit Detector]_기초데이터_01    신진욱 @xjwshin

KB지주_[Creadit Detector]_기초데이터_01

dat_strd_cprc.csv(56.25 Kb)
dat_strd_mprc.csv(7.18 Mb)
---------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------
Ticker맵핑 & TABLE 수정(추가) 및 관리자 화면 요청    장 준영이(가) 약 17시간 전에 추가함

안녕하세요. 장준영입니다.

실시간 데이터 수집에 관련하여,

현재 현재 vendor ticker 맵핑(->As-Is)와 신규 테이블(국가,장중시간,휴일 등) 에 대한 정리된 파일 보내드립니다.

현재 As-Is에 구현된 기초자산 기반으로 만들었으며, 

휴일Table과 장중시간등을 관리하기 위해서, csv(or excel)파일 업로드하는 관리자 화면도 필요할것같습니다.

정리하다보니.. CD쪽이 생각보다 난감한 부분이 많은것 같아, 궁금하신 부분있으시면 언제든 말씀부탁드립니다..

감사합니다.

첨부파일
Table신규생성_및_관리자화면.xlsx (17.9 KB) Table신규생성_및_관리자화면.xlsx
---------------------------------------------------------------------------------------------------------






<vue js json 형식 생성>
https://mkil.tistory.com/m/322



// <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

>>>>>>>>>> [2021-02-02 오전 09:00] <<<<<<<<<<







>>>>>>>>>> [2021-02-03 오전 09:00] <<<<<<<<<<
---------------------------------------------------------------------------------------------------------
KB지주_DAM_GCP_dev Cloud SQL SSL 인증서    이 재혁이(가) 약 22시간 전에 추가함

다음 명령어를 사용하여 인스턴스에 연결할 수 있습니다.

mysql -uroot -p -h 34.64.147.74 \ --ssl-ca=server-ca.pem --ssl-cert=client-cert.pem \ --ssl-key=client-key.pem

첨부파일 편집
client-cert.pem (1.23 KB) client-cert.pem	클라이언트 공개 키 인증서
client-key.pem (1.63 KB) client-key.pem	클라이언트 비공개 키
server-ca.pem (1.24 KB) server-ca.pem	서버 인증서
---------------------------------------------------------------------------------------------------------


< echarts ::: 송영곤대리 >
https://tvjsx.github.io/trading-vue-demo/
https://github.com/tvjsx/trading-vue-js
https://ecomfe.github.io/vue-echarts/demo/





[ echart markline ]
https://community.openhab.org/t/oh3-charts-with-apache-echarts/111505
https://github.com/apache/echarts/issues/3060
https://stackoverflow.com/questions/45778542/draw-horizontal-target-line-using-echart-js/47117841







CASE Detector > Dashboard > FICC

SELECT
MAX(DATA_CRETN_YMD) AS DATA_CRETN_YMD,
MAX(DATA_CRETN_HHMM) AS DATA_CRETN_HHMM
FROM TMDAMD302
WHERE 1=1
AND FNDT_ASST_ITEMS_CD = 'KTB3YF'
AND DATA_CRETN_YMD || DATA_CRETN_HHMM <= '202102030900'
GROUP BY DATA_CRETN_YMD, DATA_CRETN_HHMM
;





# 엑셀파일 다시 업로드



# 그린라이트
  -. jsp / java 로직
  -. 테이블 / 프로시져 / 펑션




T_CD_INPUT_PROC

PROCKEY
INSSEQ

ASSET
STD_DAY
STD_TIME

PREVIOUS_DAY1
PREVIOUS_DAY2
PREVIOUS_DAY3
PREVIOUS_DAY4
PREVIOUS_DAY5
PREVIOUS_DAY6
PREVIOUS_DAY7

NEXT_DAY1
NEXT_DAY2
NEXT_DAY3
NEXT_DAY4
NEXT_DAY5
NEXT_DAY6
NEXT_DAY7

ADDEMP
ADDTIM
LOGEMP
LOGTIM




################################################################################
//https://medium.com/@dahaejeon/mysql-stored-procedure-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-in-mysql-1fdd342b661a
DELIMITER $$
 
CREATE PROCEDURE GetCustomers()
BEGIN
	SELECT 
		customerName, 
		city, 
		state, 
		postalCode, 
		country
	FROM customers
	ORDER BY customerName;    
END$$

DELIMITER ;
################################################################################





★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
// https://blog.duveen.me/12
DELIMITER //

CREATE PROCEDURE GetAllProducts()
BEGIN
	SELECT * FROM products;
END //

DELIMITER ;


CALL GetAllProducts();




출처: https://blog.duveen.me/13?category=657591 [Developer Duveen.]
===========================================================================
변수 선언
    DECLARE variable_name datatype(size) DEFAULT default_value;

변수 대입
    DECLARE total_sale INT DEFAULT 0;
    DECLARE x, y INT DEFAULT 0;

    DECLARE total_count INT DEFAULT 0;
    SET total_count = 10;

    DECLARE total_products INT DEFAULT 0
    SELECT COUNT(*) INTO total_products FROM products



매개변수
    MODE param_name param_type(param_size)
    MODE는 IN, OUT, INOUT 을 지정할 수 있다.

IN 매개변수 연습
    DELIMITER //
    CREATE PROCEDURE GetOfficeByCountry(IN countryName VARCHAR(255))
    BEGIN
	    SELECT * 
	    FROM offices
	    WHERE country = countryName;
    END //
    DELIMITER ;

    CALL GetOfficeByCountry('USA');
    CALL GetOfficeByCountry('France');

OUT 매개변수 예제
    DELIMITER $$
    CREATE PROCEDURE CountOrderByStatus(
	    IN orderStatus VARCHAR(25),
	    OUT total INT)
    BEGIN
	    SELECT count(orderNumber)
		    INTO total
	    FROM orders
	    WHERE status = orderStatus;
    END$$
    DELIMITER ;

    -- 완료된 주문수 얻기
    CALL CountOrderByStatus('Shipped', @total);
    SELECT @total;


    -- 처리 중인 주문의 수를 얻기
    CALL CountOrderByStatus('in process', @total);
    SELECT @total AS total_in_process;

INOUT 매개변수 예제
    DELIMITER $$
    CREATE PROCEDURE set_counter(INOUT count INT(4),IN inc INT(4))
    BEGIN
    	SET count = count + inc;
    END$$
    DELIMITER ;

    동작 방법
    set_counter 저장 프로시저는 하나의 INOUT 매개변수( count ) 와 하나의 IN 매개변수 ( inc ) 를 받는다.
    저장 프로시저 내부에서, inc 매개변수의 값으로 받은 counter ( count ) 의 값을 증가시킨다.
    set_counter 저장 프로시저를 어떻게 호출 하는지 볼 수 있다.

    SET @counter = 1;
    CALL set_counter(@counter,1); -- 2
    CALL set_counter(@counter,1); -- 3
    CALL set_counter(@counter,5); -- 8
    SELECT @counter; -- 8



다중 값을 반환하는 저장프로시저 예제

    샘플 데이터베이스의 orders 테이블을 살펴보자.
    아래의 저장 프로시저는 customerNumber를 받고 shipped, cancled, resolved, disputed의 총 갯수를 반환하고 있다.


    DELIMITER $$
    CREATE PROCEDURE get_order_by_cust(
	    IN cust_no INT,
	    OUT shipped INT,
	    OUT canceled INT,
	    OUT resolved INT,
	    OUT disputed INT)
    BEGIN
	-- shipped
	SELECT count(*) INTO shipped
	FROM orders
	WHERE customerNumber = cust_no AND status = 'Shipped';

	-- canceled
	SELECT count(*) INTO canceled
	FROM orders
	WHERE customerNumber = cust_no AND status = 'Canceled';

	-- resolved
	SELECT count(*) INTO resolved
	FROM orders
	WHERE customerNumber = cust_no AND status = 'Resolved';

	-- disputed
	SELECT count(*) INTO disputed
	FROM orders
	WHERE customerNumber = cust_no AND status = 'Disputed';
    END $$
    DELIMITER ;

    CALL get_order_by_cust(141,@shipped,@canceled,@resolved,@disputed);
    SELECT @shipped,@canceled,@resolved,@disputed;



MySQL IF 문 구조
    IF expression THEN 
	statements;
    END IF;
    ------------------------------
    IF expression THEN
	statements;
    ELSE
	else-statements;
    END IF;
    ------------------------------
    IF expression THEN
	statements;
    ELSEIF elseif-expression THEN
	elseif-statements;
	...
    ELSE
	else-statements;
    END IF;

MySQL IF 문 예제
    DELIMITER $$
 
    CREATE PROCEDURE GetCustomerLevel(
	IN  p_customerNumber int(11), 
	OUT p_customerLevel  varchar(10))
    BEGIN
	DECLARE creditlim double;
 
	SELECT creditlimit INTO creditlim
	FROM customers
	WHERE customerNumber = p_customerNumber;
 
	IF creditlim > 50000 THEN
		SET p_customerLevel = 'PLATINUM';
	ELSEIF (creditlim <= 50000 AND creditlim >= 10000) THEN
		SET p_customerLevel = 'GOLD';
	ELSEIF creditlim < 10000 THEN
		SET p_customerLevel = 'SILVER';
	END IF;
 
    END$$
 
    DELIMITER ;

간단한 CASE 문
    CASE  case_expression
	WHEN when_expression_1 THEN commands
	WHEN when_expression_2 THEN commands
	...
	ELSE commands
    END CASE;
    ------------------------------
    DELIMITER $$
    CREATE PROCEDURE GetCustomerShipping(
	IN  p_customerNumber int(11), 
	OUT p_shiping        varchar(50))
    BEGIN
	DECLARE customerCountry varchar(50);
 
	SELECT country INTO customerCountry
	FROM customers
	WHERE customerNumber = p_customerNumber;
 
	CASE customerCountry
		WHEN  'USA' THEN
			SET p_shiping = '2-day Shipping';
		WHEN 'Canada' THEN
			SET p_shiping = '3-day Shipping';
		ELSE
			SET p_shiping = '5-day Shipping';
	END CASE;
    END$$
    DELIMITER ;
    ------------------------------
    SET @customerNo = 112;
 
    SELECT country INTO @country
    FROM customers
    WHERE customernumber = @customerNo;
 
    CALL GetCustomerShipping(@customerNo,@shipping);
 
    SELECT @customerNo AS Customer,
           @country    AS Country,
           @shipping   AS Shipping;

검색된(Searched) CASE 문
    CASE
    	WHEN condition_1 THEN commands
	WHEN condition_2 THEN commands
    	...
	ELSE commands
    END CASE;
    ------------------------------
    DELIMITER $$
    CREATE PROCEDURE GetCustomerLevel(
	IN  p_customerNumber int(11), 
	OUT p_customerLevel  varchar(10))
    BEGIN
	DECLARE creditlim double;

	SELECT creditlimit INTO creditlim
	FROM customers
	WHERE customerNumber = p_customerNumber;

	CASE  
		WHEN creditlim > 50000 THEN 
			SET p_customerLevel = 'PLATINUM';
		WHEN (creditlim <= 50000 AND creditlim >= 10000) THEN
			SET p_customerLevel = 'GOLD';
		WHEN creditlim < 10000 THEN
			SET p_customerLevel = 'SILVER';
	END CASE;
    END$$
    DELIMITER ;

    아래의 테스트 스크립트를 실행해서 저장 프로시저를 테스트 할 수 있다.
    CALL GetCustomerLevel(112, @level);
    SELECT @level AS 'Customer Level';



MySQL Loop 문(WHILE, REPEAT, LOOP)
    MySQL에서는 WHILE, REPEAT, LOOP의 반복문이 있다.

WHILE 반복
    WHILE expression DO
	statements
    END WHILE
    ------------------------------
    DELIMITER $$
    DROP PROCEDURE IF EXISTS test_mysql_while_loop$$

    CREATE PROCEDURE test_mysql_while_loop()
    BEGIN
	DECLARE x INT;
	DECLARE str VARCHAR(255);
 
	SET x = 1;
	SET str =  '';
 
	WHILE x  <= 5 DO
		SET  str = CONCAT(str,x,',');
		SET  x = x + 1; 
	END WHILE;
 
	SELECT str;
    END$$
    DELIMITER ;

    CALL test_mysql_while_loop();


REPEAT 문
    REPEAT 문법의 구조는 아래와 같다:

    REPEAT
	statements;
	UNTIL expression
    END REPEAT
    ------------------------------
    DELIMITER $$
    DROP PROCEDURE IF EXISTS test_mysql_repeat_loop$$

    CREATE PROCEDURE test_mysql_repeat_loop()
    BEGIN
	DECLARE x INT;
	DECLARE str VARCHAR(255);
 
	SET x = 1;
	SET str =  '';
 
	REPEAT
		SET  str = CONCAT(str,x,',');
		SET  x = x + 1; 
		UNTIL x > 5
	END REPEAT;
 
	SELECT str;
	END$$
    DELIMITER ;

    ▶▶▶▶▶ UNTIL 표현식(expression)에서는 세미콜론( ; )을 사용하지 않는것을 알고 있어야 한다. ◀◀◀◀◀

    CALL mysql_test_repeat_loop();


LOOP, LEAVE, ITERATE 문
    LOOP를 제어할 수 있게 하는 2개의 문법이 있다:

    - LEAVE 문은 조건을 만족할 때 까지 기다리지 않고 즉시 반복문을 빠져 나갈 수 있게 허용한다. LEAVE문은 PHP, C/C+, JAVA 와 같은 다른 언어에서 break 처럼 작동한다.

    - ITERATE 문은 코드를 전부 실행 시키지 않고 새로운 반복을 시작하도록 한다. ITERATE 문은 PHP, C/C++, JAVA 에서 continue문과 비슷하게 작동한다.

    MySQL은 또한 반복 상태의 코드 구간에서 코드를 조금 더 유용성 있게 하는 loop label을 제공한다.

    CREATE PROCEDURE test_mysql_loop()
    BEGIN
	DECLARE x  INT;
	DECLARE str VARCHAR(255);

	SET x = 1;
	SET str = '';

	loop_label: LOOP
		IF x > 10 THEN 
			LEAVE loop_label;
		END IF;

		SET x = x + 1;
		IF (x mod 2) THEN
			ITERATE loop_label;
		ELSE
			SET str = CONCAT(str,x,',');
		END IF;
	END LOOP;
 
	SELECT str;
    END;

    - 저장 프로시저는 짝수(2, 4, 6 등)의 문자열만 나열한다.
    - 우리는 LOOP문을 실행하기 전에 loop_label의 이름을 가진 loop label을 배치한다.
    - 만약 x의 값이 10보다 크다면  LEAVE문에 의해서 종료 되어진다.
    - 만약 x의 값이 홀수 라면, ITERATE문 아래의 모든 것을 무시하고 새로운 반복을 시작한다.
    - 만약 x의 값이 짝수 라면, ELSE문의 구간에 짝수만 존재하는 문자열을 만들 것이다.


MySQL Cursor 를 소개합니다.

    저장 프로세저 내부에 있는 결과 집합들을 처리하는데 cursor를 사용할 수 있다. cursor는 query에 의해 반환된 rows의 set을 반복하고 그에 따라 각 row를 처리할 수 있다.
    MySQL cursor는 Read Only, Non-Scrollable, Asensitive 이다.
        - ReadOnly : cursor를 통해서 테이블에 있는 데이터를 업데이트 할 수 없다.
        - Non-scrollable : SELECT문에 의해 결정된 순서로 rows를 가져 올 수 있다. 반대 순서로 rows를 가져 올 수 없다. 추가로, 결과 set에 대해 특정한 row를 건너 뛰거나 rows 생략할 수 없다.
        - Asensitive : 두 종류의 cursor가 있다. asensitive cursor와 insensitive cursor가 있다. asensitive cursor는 실제 데이터를 가르킨다. 그에 비해 insensitive cursor는 데이터의 임시 복사본을 사용한다. asensitive cursor는 insensitive cursor보다 빠르게 수행한다. 왜냐하면 데이터의 임시 복사본을 만들지 않기 때문이다. 하지만 다른 connections으로 부터 데이터를 만드는것 같은 변화가 생긴다면 asensitive cursor가 사용하고 있는 데이터에 영향을 받는다. 그러므로, 만약 asensitive cursor에서 사용하고 있는 데이터를 업데이트 하지 않는다면 안전하다. MySQL cursor는 asensitive 이다.

    stored procedures, stored functions, triggers에서 MySQL cursor를 사용할 수 있다.


MySQL cursor와 함께 작업하기
    DECLARE cursor_name CURSOR FOR SELECT_statement;
    OPEN cursor_name;
    FETCH cursor_name INTO variables list;
    CLOSE cursor_name;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;


MySQL Cursor 예제
    DECLARE finished INTEGER DEFAULT 0;
    DECLARE email varchar(255) DEFAULT "";
 
    -- declare cursor for employee email
    DEClARE email_cursor CURSOR FOR 
    SELECT email FROM employees;
 
    -- declare NOT FOUND handler
    DECLARE CONTINUE HANDLER 
    FOR NOT FOUND SET finished = 1;
    ------------------------------
    OPEN email_cursor;

    get_email: LOOP
	FETCH email_cursor INTO v_email;
		IF v_finished = 1 THEN 
			LEAVE get_email;
		END IF;

	-- build email list
	SET email_list = CONCAT(v_email,";",email_list);
    END LOOP get_email;

    CLOSE email_cursor;


MySQL Cursor 예제 전체소스
    DELIMITER $$
    CREATE PROCEDURE build_email_list (INOUT email_list varchar(4000))
    BEGIN
	DECLARE v_finished INTEGER DEFAULT 0;
	DECLARE v_email varchar(100) DEFAULT "";

	-- declare cursor for employee email
	DEClARE email_cursor CURSOR FOR 
		SELECT email FROM employees;

	-- declare NOT FOUND handler
	DECLARE CONTINUE HANDLER 
	FOR NOT FOUND SET v_finished = 1;
 
	OPEN email_cursor;
 
	get_email: LOOP
	FETCH email_cursor INTO v_email;
		IF v_finished = 1 THEN 
			LEAVE get_email;
		END IF;
 
		-- build email list
		SET email_list = CONCAT(v_email,";",email_list);

	END LOOP get_email;

	CLOSE email_cursor;
    END$$
    DELIMITER ;
    ------------------------------
    SET @email_list = "";
    CALL build_email_list(@email_list);
    SELECT @email_list;



Stored Procedures 의 특징을 제공
    SHOW PROCEDURE STATUS [LIKE 'pattern' | WHERE expr];
    SHOW PROCEDURE STATUS;
    SHOW PROCEDURE STATUS WHERE db = 'classicmodels';
    SHOW PROCEDURE STATUS WHERE name LIKE '%product%'

저장 프로시저의 소스코드 보기
    SHOW CREATE PROCEDURE stored_procedure_name;
    SHOW CREATE PROCEDURE GetAllProducts;



Stored Procedures의 MySQL 에러처리

handler 선언
    DECLARE action HANDLER FOR condition_value statement;


MySQL 에러 처리 예제
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET has_error = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
	ROLLBACK;
	SELECT 'An error has occurred, operation rollbacked and the stored procedure was terminated';
    END;


아래 handler는 만약 SELECT INTO 문 이나 cursor의 케이스인 경우에 더 이상 가져올 행이 없다면
no_row_found 변수의 값을 1로 설정하고 계속 실행하는 의미를 가지는 handler 이다.
DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_row_found = 1;


DECLARE CONTINUE HANDLER FOR 1062
SELECT 'Error, duplicate key occurred';




+++++++++++++++ < 저장 프로시저에서 MySQL handler 예제 > +++++++++++++++
CREATE TABLE article_tags(
    article_id INT,
    tag_id     INT,
    PRIMARY KEY(article_id,tag_id)
);
---------------------------------------------------------------------------
DELIMITER $$
CREATE PROCEDURE insert_article_tags(IN article_id INT, IN tag_id INT)
BEGIN
    DECLARE CONTINUE HANDLER FOR 1062
    SELECT CONCAT('duplicate keys (',article_id,',',tag_id,') found') AS msg;
 
    --insert a new record into article_tags
    INSERT INTO article_tags(article_id,tag_id)
    VALUES(article_id,tag_id);
 
    -- return tag count for the article
    SELECT COUNT(*) FROM article_tags;
END
---------------------------------------------------------------------------
CALL insert_article_tags(1,1);
CALL insert_article_tags(1,2);
CALL insert_article_tags(1,3);
---------------------------------------------------------------------------
CALL insert_article_tags(1,3);
---------------------------------------------------------------------------
DELIMITER $$
CREATE PROCEDURE insert_article_tags_2(IN article_id INT, IN tag_id INT)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    SELECT 'SQLException invoked';
 
    DECLARE EXIT HANDLER FOR 1062 
    SELECT 'MySQL error code 1062 invoked';
 
    DECLARE EXIT HANDLER FOR SQLSTATE '23000'
    SELECT 'SQLSTATE 23000 invoked';
 
    -- insert a new record into article_tags
    INSERT INTO article_tags(article_id,tag_id)
    VALUES(article_id,tag_id);
 
    -- return tag count for the article
    SELECT COUNT(*) FROM article_tags;
END
---------------------------------------------------------------------------
+++++++++++++++ < 저장 프로시저에서 MySQL handler 예제 > +++++++++++++++







★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
https://blog.duveen.me/20?category=657591 다시 읽기
https://blog.duveen.me/23?category=657591
★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★





#################### [테스트한거] ####################
DELIMITER //

CREATE PROCEDURE GetAllCitys ()
BEGIN
	SELECT * FROM world.city;
END //

DELIMITER ;



call getallcitys();
#################### [테스트한거] ####################

>>>>>>>>>> [2021-02-03 오전 09:00] <<<<<<<<<<




















